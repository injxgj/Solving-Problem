카드 놀이
 

문제 :
      N개의 카드가 주어지고, 각각은 자연수의 점수를 가진다. 철수는 이제 이 카드를 가져감으로써 카드에 적혀있는 수 만큼의 점수를 얻는다. 
      단, 카드를 가져갈 때 한가지 규칙이 있는데, 이는 연속하여 3개의 카드는 가져갈 수 없다는 것이다. 예를 들어, 6개의 카드 “1 3 5 2 7 3”가 
      주어질 경우, 3+5+7+3=18 만큼의 점수를 얻는 것이 최대이다. N개의 카드가 주어질 때, 얻을 수 있는 점수의 최댓값을 출력하는 프로그램을 작성하시오.
      
      
      
입력 :
      첫 번째 줄에 N이 주어진다. ( 1 ≤ N ≤ 100,000 ) 두 번째 줄에 N개의 숫자가 주어지며, 이는 각 카드의 점수를 나타낸다.  


출력 :
      얻을 수 있는 점수의 최댓값을 출력한다.
 
 
예제 입력 :
      6
      1 3 5 2 7 3
      
      
예제 출력 :
      18
      
      
      
      
      
// DP 사용
// DP 테이블 정의 : 해당 index까지의 최대 점수 값을 저장 (최대 점수값임을 확인하는 방법은 3가지 경우의 최대값을 비교해서 가장 큰값을 구하면 됨.
                    54 ~ 55 line 부분이 이에 해당됨
// 1. DP[1, 2]는 초기값으로 임의로 값을 준다.
// 2. 3 ~ N까지의 DP[]값을 구한다. 
// 3. DP[N]값을 
#include<cstdio>
#include<algorithm>
using namespace std;
 
int score[100001];
int DP[100001];
int N;
 
int main()
{
    int max_num;
    //freopen("input.in", "r", stdin);
    scanf("%d", &N);
    for (int i = 1; i <= N; i++) 
        scanf("%d", &score[i]);
    
    DP[1] = score[1];
    DP[2] = score[1] + score[2];
    
    for (int i = 3; i <= N; i++) {
        max_num = max(DP[i - 2] + score[i], DP[i - 3] + score[i - 1] + score[i]);
        DP[i] = max(DP[i - 1], max_num);
    }
    printf("%d", DP[N]);
}
