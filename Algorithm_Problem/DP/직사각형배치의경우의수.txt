직사각형 배치의 경우의 수
 

문제 :
      2 x N 직사각형 모양의 칸이 있다. 이를 2 x 1 모양의 타일로 가득 채우려 한다. 가능한 경우의 수를 출력하는 프로그램을 작성하시오. 
      단, 가능한 경우의 수가 매우 많을 수 있으므로, 그 경우의 수를 1,000,007 로 나눈 나머지를 출력한다.

      예를 들어, N = 3 일 경우에는 다음 세 가지의 가능한 경우가 존재한다.

입력 :
      첫 번째 줄에 N이 주어진다. ( 1 ≤ N ≤ 100 )  

출력 :
      가능한 경우의 수를 1,000,007 로 나눈 나머지를 출력한다.

 

예제 입력 :
      3
예제 출력 : 
      3


// DP 사용
// DP 테이블 정의 : 맨 끝이 '|'일 경우와 '='일 경우로 나누어 값을 구한다. 즉, DP[7]에 경우는 DP[5]와 DP[6]에 경우의 합을 해주면 된다.
// 1. DP[1, 2] 값을 초기값으로 임의로 값을 대입한다.           
// 2. DP[N] = DP[N - 1] + DP[N - 2]에 방법으로 구한다.
// 3. DP[N]값 출력한다.
#include<cstdio>
 
 
int N;
int DP[101];
 
int main()
{
    int count = 0, result = 0;
    //freopen("input.in", "r", stdin);
    scanf("%d", &N);
 
    DP[1] = 1;
    DP[2] = 2;
 
    for (int i = 3; i <= N; i++) {
        DP[i] = DP[i - 1] + card[i - 2];
        if (DP[i] >= 1000007)
            DP[i] %= 1000007;
    }
    printf("%d", DP[N]);
}
